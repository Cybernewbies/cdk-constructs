name: Build
on:
  pull_request: {}
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: ["10", "12"]
    name: Node ${{ matrix.node }} build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Installing
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile
      - name: Building
        run: yarn build
      - name: Linting
        run: yarn lint
      - name: Testing
        run: yarn test
      - name: Anti-tamper check
        run: git diff --exit-code
    container:
      image: jsii/superchain
