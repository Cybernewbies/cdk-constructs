// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`default setup 1`] = `
Object {
  "Parameters": Object {
    "AssetParametersc82ab631133fcbacba75e34003554476abe4d086d477fe4dc9c98fb25a6e5affArtifactHash3453F7BF": Object {
      "Description": "Artifact hash for asset \\"c82ab631133fcbacba75e34003554476abe4d086d477fe4dc9c98fb25a6e5aff\\"",
      "Type": "String",
    },
    "AssetParametersc82ab631133fcbacba75e34003554476abe4d086d477fe4dc9c98fb25a6e5affS3Bucket9266BA0E": Object {
      "Description": "S3 bucket for asset \\"c82ab631133fcbacba75e34003554476abe4d086d477fe4dc9c98fb25a6e5aff\\"",
      "Type": "String",
    },
    "AssetParametersc82ab631133fcbacba75e34003554476abe4d086d477fe4dc9c98fb25a6e5affS3VersionKey5B5295A8": Object {
      "Description": "S3 key for asset version \\"c82ab631133fcbacba75e34003554476abe4d086d477fe4dc9c98fb25a6e5aff\\"",
      "Type": "String",
    },
    "AssetParametersec79d1c004d15cd2cc5c1a0928a9357262044f34ec3cfa775482817ddca3ed32ArtifactHash3016A0A8": Object {
      "Description": "Artifact hash for asset \\"ec79d1c004d15cd2cc5c1a0928a9357262044f34ec3cfa775482817ddca3ed32\\"",
      "Type": "String",
    },
    "AssetParametersec79d1c004d15cd2cc5c1a0928a9357262044f34ec3cfa775482817ddca3ed32S3Bucket8BA5B62A": Object {
      "Description": "S3 bucket for asset \\"ec79d1c004d15cd2cc5c1a0928a9357262044f34ec3cfa775482817ddca3ed32\\"",
      "Type": "String",
    },
    "AssetParametersec79d1c004d15cd2cc5c1a0928a9357262044f34ec3cfa775482817ddca3ed32S3VersionKey83E51568": Object {
      "Description": "S3 key for asset version \\"ec79d1c004d15cd2cc5c1a0928a9357262044f34ec3cfa775482817ddca3ed32\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "DeletableBucket57D73C39": Object {
      "DeletionPolicy": "Delete",
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "DeletableBucketEmptyBucketCustomResource2332430B": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "BucketName": Object {
          "Ref": "DeletableBucket57D73C39",
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "DeletableBucketEmptyBucketEmptyBucketProviderframeworkonEvent3E17DC13",
            "Arn",
          ],
        },
      },
      "Type": "Custom::EmptyBucket",
      "UpdateReplacePolicy": "Delete",
    },
    "DeletableBucketEmptyBucketEmptyBucketProviderframeworkonEvent3E17DC13": Object {
      "DependsOn": Array [
        "DeletableBucketEmptyBucketEmptyBucketProviderframeworkonEventServiceRoleDefaultPolicy12B3C80B",
        "DeletableBucketEmptyBucketEmptyBucketProviderframeworkonEventServiceRoleF9BBD633",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParametersc82ab631133fcbacba75e34003554476abe4d086d477fe4dc9c98fb25a6e5affS3Bucket9266BA0E",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersc82ab631133fcbacba75e34003554476abe4d086d477fe4dc9c98fb25a6e5affS3VersionKey5B5295A8",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersc82ab631133fcbacba75e34003554476abe4d086d477fe4dc9c98fb25a6e5affS3VersionKey5B5295A8",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Description": "AWS CDK resource provider framework - onEvent (DeletableBucket/EmptyBucket/EmptyBucketProvider)",
        "Environment": Object {
          "Variables": Object {
            "USER_ON_EVENT_FUNCTION_ARN": Object {
              "Fn::GetAtt": Array [
                "SingletonLambdaCloudcomponentsEmptyBucketCustomResource09B44FFE",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.onEvent",
        "Role": Object {
          "Fn::GetAtt": Array [
            "DeletableBucketEmptyBucketEmptyBucketProviderframeworkonEventServiceRoleF9BBD633",
            "Arn",
          ],
        },
        "Runtime": "nodejs10.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DeletableBucketEmptyBucketEmptyBucketProviderframeworkonEventServiceRoleDefaultPolicy12B3C80B": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "SingletonLambdaCloudcomponentsEmptyBucketCustomResource09B44FFE",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DeletableBucketEmptyBucketEmptyBucketProviderframeworkonEventServiceRoleDefaultPolicy12B3C80B",
        "Roles": Array [
          Object {
            "Ref": "DeletableBucketEmptyBucketEmptyBucketProviderframeworkonEventServiceRoleF9BBD633",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DeletableBucketEmptyBucketEmptyBucketProviderframeworkonEventServiceRoleF9BBD633": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "SingletonLambdaCloudcomponentsEmptyBucketCustomResource09B44FFE": Object {
      "DependsOn": Array [
        "SingletonLambdaCloudcomponentsEmptyBucketCustomResourceServiceRoleDefaultPolicyFA08A909",
        "SingletonLambdaCloudcomponentsEmptyBucketCustomResourceServiceRoleEE758E51",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParametersec79d1c004d15cd2cc5c1a0928a9357262044f34ec3cfa775482817ddca3ed32S3Bucket8BA5B62A",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersec79d1c004d15cd2cc5c1a0928a9357262044f34ec3cfa775482817ddca3ed32S3VersionKey83E51568",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersec79d1c004d15cd2cc5c1a0928a9357262044f34ec3cfa775482817ddca3ed32S3VersionKey83E51568",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "SingletonLambdaCloudcomponentsEmptyBucketCustomResourceServiceRoleEE758E51",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "SingletonLambdaCloudcomponentsEmptyBucketCustomResourceServiceRoleDefaultPolicyFA08A909": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "DeletableBucket57D73C39",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DeletableBucket57D73C39",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "SingletonLambdaCloudcomponentsEmptyBucketCustomResourceServiceRoleDefaultPolicyFA08A909",
        "Roles": Array [
          Object {
            "Ref": "SingletonLambdaCloudcomponentsEmptyBucketCustomResourceServiceRoleEE758E51",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "SingletonLambdaCloudcomponentsEmptyBucketCustomResourceServiceRoleEE758E51": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
  },
}
`;
